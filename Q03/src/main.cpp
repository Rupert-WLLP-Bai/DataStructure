#include <iostream>
#include "dfs.h"
#include "Perfect_Maze.h"
#include "tool.h"
// #include "backtrace.h"

#define MAX_SIZE 30
#define MIN_SIZE 1
using namespace std;

int main() {
#ifdef _WIN32
    system("chcp 65001");
#endif
    int row, col;
    get_input(row, MIN_SIZE, MAX_SIZE, "输入迷宫行数(1 ~ 30): ");
    get_input(col, MIN_SIZE, MAX_SIZE, "输入迷宫列数(1 ~ 30): ");
    maze M(row, col);
    dfs dfs;

    Perfect_Maze P;
    P.generate(M);
    cout << "--------------------maze generated by PM--------------------" << endl;
    M.print_node_all();

    cout << "--------------------maze solved by dfs_solving----------------------" << endl;
    dfs.solve(M);

    //在终端输出带颜色的路径 最后可以尝试在终端复现寻路过程(利用光标定位)
    //dfs.print_results(M);
#ifdef _WIN32
    system("pause");
#endif
    return 0;
}